(declare-fun |main::j| () Int)
(declare-fun Num () Int)
(declare-fun |*(struct_Node)*| (Int ) Int)
(declare-fun |__ADDRESS_OF_main::L| () Int)
(declare-fun |ListInsert::p| () Int)
(declare-fun |ListInsert::i| () Int)
(declare-fun |ListInsert::j| () Int)

*:
(assert (>= Num 0))

ListLength N46:
(assert (>= Num 0))
(assert (<= 0 (+ Num (- 5))))
(assert (distinct (|*(struct_Node)*| |__ADDRESS_OF_main::L|) 0))
(assert (= 0 (|*(struct_Node)*| |__ADDRESS_OF_main::L|)))

ListInsert N97:
(assert (<= 0 (+ |main::j| (- 2))))
(assert (>= Num 0))
(assert (<= 0 (+ |main::j| (- 3))))
(assert (<= 0 (+ Num (- 5))))
(assert (<= 0 (+ |main::j| (- 4))))
(assert (<= 0 (+ |main::j| (- 5))))
(assert false)
(assert (= 0 (|*(struct_Node)*| |__ADDRESS_OF_main::L|)))
(assert (<= 1 1))
(assert (= |ListInsert::p| (|*(struct_Node)*| |__ADDRESS_OF_main::L|)))
(assert (<= |ListInsert::j| |ListInsert::i|))
(assert (<= 0 (+ Num (- 4))))
(assert (= |ListInsert::p| 0))
(assert (distinct (|*(struct_Node)*| |__ADDRESS_OF_main::L|) 0))
(assert (distinct |ListInsert::p| 0))
(assert (<= 0 (+ Num (- 3))))
(assert (<= 0 (+ Num (- 2))))
(assert (<= 0 (+ Num (- 1))))
(assert (= (+ |main::j| (- 1)) 0))

ListInsert N111:
(assert (>= Num 0))
(assert false)

main N224:
(assert (<= 0 (+ |main::j| (- 2))))
(assert (>= Num 0))
(assert (<= 0 (+ |main::j| (- 3))))
(assert (<= 0 (+ Num (- 5))))
(assert (<= 0 (+ |main::j| (- 4))))
(assert (<= 0 (+ |main::j| (- 5))))
(assert (= 0 (|*(struct_Node)*| |__ADDRESS_OF_main::L|)))
(assert (<= 0 (+ |main::j| (- 6))))
(assert (<= 1 1))
(assert (<= 0 (+ Num (- 4))))
(assert (distinct (|*(struct_Node)*| |__ADDRESS_OF_main::L|) 0))
(assert (<= 0 (+ Num (- 3))))
(assert (<= 0 (+ Num (- 2))))
(assert (<= 0 (+ Num (- 1))))
(assert (= (+ |main::j| (- 1)) 0))

