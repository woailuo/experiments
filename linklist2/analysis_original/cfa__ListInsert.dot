digraph ListInsert {
90 [shape="circle" label="N90\n14"]
91 [shape="circle" label="N91\n13"]
97 [shape="doublecircle" label="N97\n12"]
99 [shape="diamond" label="N99\n9"]
100 [shape="diamond" label="N100\n11"]
98 [shape="circle" label="N98\n10"]
104 [shape="circle" label="N104\n1"]
105 [shape="diamond" label="N105\n8"]
103 [shape="circle" label="N103\n7"]
108 [shape="diamond" label="N108\n5"]
109 [shape="circle" label="N109\n3"]
110 [shape="circle" label="N110\n4"]
111 [shape="circle" label="N111\n2"]
89 [shape="circle" label="N89\n0"]
103 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">103</td><td align="left">s = malloc(8);</td></tr><tr><td align="right">107</td><td align="left">Num = Num - 1;</td></tr></table>>]
103 -> 108[label=""]
90 -> 91 [label="Function start dummy edge" fontname="Courier New"]
97 -> 99 [label="[p == 0]" fontname="Courier New"]
97 -> 100 [label="[!(p == 0)]" fontname="Courier New"]
100 -> 98 [label="[j < i]" fontname="Courier New"]
100 -> 99 [label="[!(j < i)]" fontname="Courier New"]
99 -> 104 [label="[p == 0]" fontname="Courier New"]
99 -> 105 [label="[!(p == 0)]" fontname="Courier New"]
105 -> 104 [label="[j > i]" fontname="Courier New"]
105 -> 103 [label="[!(j > i)]" fontname="Courier New"]
108 -> 109 [label="[Num >= 0]" fontname="Courier New"]
108 -> 110 [label="[!(Num >= 0)]" fontname="Courier New"]
111 -> 89 [label="s->data = e; s->next = p->next; p->next = s; return 1;" fontname="Courier New"]
104 -> 89 [label="return 0;" fontname="Courier New"]
91 -> 97 [label="int j; struct Node *p; struct Node *s; p = *L; j = 1; while" fontname="Courier New"]
110 -> 111 [label="__assert_fail(\"Num >= 0\", \"tf/linklist2.c\", 143, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
109 -> 111 [label="(void)0;" fontname="Courier New"]
98 -> 97 [label="p = p->next; j = j + 1; " fontname="Courier New"]
}