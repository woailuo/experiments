digraph process_ihex {
139 [shape="doublecircle" label="N139\n88"]
140 [shape="doublecircle" label="N140\n87"]
141 [shape="diamond" label="N141\n86"]
142 [shape="diamond" label="N142\n80"]
154 [shape="circle" label="N154\n2"]
153 [shape="circle" label="N153\n79"]
157 [shape="circle" label="N157\n78"]
158 [shape="diamond" label="N158\n77"]
159 [shape="circle" label="N159\n73"]
160 [shape="circle" label="N160\n76"]
162 [shape="circle" label="N162\n75"]
163 [shape="circle" label="N163\n74"]
166 [shape="circle" label="N166\n72"]
167 [shape="diamond" label="N167\n71"]
168 [shape="circle" label="N168\n69"]
169 [shape="circle" label="N169\n70"]
170 [shape="diamond" label="N170\n68"]
172 [shape="circle" label="N172\n4"]
171 [shape="circle" label="N171\n67"]
176 [shape="diamond" label="N176\n65"]
178 [shape="circle" label="N178\n6"]
177 [shape="circle" label="N177\n64"]
181 [shape="circle" label="N181\n63"]
182 [shape="circle" label="N182\n62"]
185 [shape="circle" label="N185\n61"]
186 [shape="circle" label="N186\n60"]
188 [shape="circle" label="N188\n59"]
189 [shape="circle" label="N189\n58"]
192 [shape="doublecircle" label="N192\n57"]
194 [shape="circle" label="N194\n8"]
195 [shape="circle" label="N195\n56"]
200 [shape="circle" label="N200\n55"]
201 [shape="diamond" label="N201\n54"]
203 [shape="circle" label="N203\n10"]
202 [shape="circle" label="N202\n53"]
206 [shape="diamond" label="N206\n52"]
209 [shape="diamond" label="N209\n16"]
210 [shape="diamond" label="N210\n51"]
217 [shape="diamond" label="N217\n21"]
218 [shape="diamond" label="N218\n50"]
225 [shape="circle" label="N225\n31"]
226 [shape="diamond" label="N226\n49"]
227 [shape="diamond" label="N227\n30"]
228 [shape="diamond" label="N228\n48"]
241 [shape="circle" label="N241\n43"]
242 [shape="diamond" label="N242\n47"]
243 [shape="diamond" label="N243\n42"]
244 [shape="circle" label="N244\n46"]
247 [shape="diamond" label="N247\n41"]
246 [shape="circle" label="N246\n33"]
248 [shape="circle" label="N248\n32"]
245 [shape="circle" label="N245\n40"]
252 [shape="diamond" label="N252\n37"]
253 [shape="circle" label="N253\n34"]
254 [shape="circle" label="N254\n36"]
255 [shape="circle" label="N255\n35"]
231 [shape="diamond" label="N231\n29"]
230 [shape="circle" label="N230\n23"]
232 [shape="circle" label="N232\n22"]
229 [shape="circle" label="N229\n28"]
235 [shape="diamond" label="N235\n27"]
236 [shape="circle" label="N236\n25"]
237 [shape="circle" label="N237\n26"]
238 [shape="circle" label="N238\n24"]
221 [shape="diamond" label="N221\n20"]
220 [shape="circle" label="N220\n19"]
222 [shape="circle" label="N222\n18"]
219 [shape="circle" label="N219\n17"]
207 [shape="circle" label="N207\n11"]
125 [shape="circle" label="N125\n0"]
212 [shape="circle" label="N212\n12"]
211 [shape="circle" label="N211\n15"]
214 [shape="circle" label="N214\n14"]
215 [shape="circle" label="N215\n13"]
196 [shape="circle" label="N196\n7"]
179 [shape="circle" label="N179\n5"]
173 [shape="circle" label="N173\n3"]
144 [shape="circle" label="N144\n85"]
143 [shape="circle" label="N143\n84"]
151 [shape="diamond" label="N151\n83"]
149 [shape="circle" label="N149\n81"]
148 [shape="circle" label="N148\n82"]
126 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">126</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">127</td><td align="left">struct ihex_binrec *record; unsigned int offset = 0; unsigned int data32; unsigned char type; unsigned char crc = 0; unsigned char crcbyte = 0; int i; int j; int line = 1; int len; i = 0; Label: next_record</td></tr></table>>]
126 -> 139[label=""]
171 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">171</td><td align="left">memset(record, 0, ((14 + len) + 3) &amp; (~3));</td></tr><tr><td align="right">175</td><td align="left">record-&gt;len = len;</td></tr></table>>]
171 -> 176[label=""]
244 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">244</td><td align="left">default</td></tr><tr><td align="right">257</td><td align="left">fprintf(stderr, \"Unknown record (type %02X)\n\", type);</td></tr><tr><td align="right">258</td><td align="left">return -22;</td></tr></table>>]
244 -> 125[label=""]
245 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">245</td><td align="left">memcpy(&amp;data32, &amp;((record-&gt;data)[0]), 4);</td></tr><tr><td align="right">250</td><td align="left">data32 = htonl(data32);</td></tr><tr><td align="right">251</td><td align="left">memcpy(&amp;((record-&gt;data)[0]), &amp;data32, 4);</td></tr></table>>]
245 -> 252[label=""]
203 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">203</td><td align="left">fprintf(stderr, \"CRC failure at line %d: got 0x%X, expected 0x%X\n\", line, crcbyte, (unsigned char)(crcbyte - crc));</td></tr><tr><td align="right">204</td><td align="left">return -22;</td></tr></table>>]
203 -> 125[label=""]
154 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">154</td><td align="left">fprintf(stderr, \"Can't find valid record at line %d\n\", line);</td></tr><tr><td align="right">155</td><td align="left">return -22;</td></tr></table>>]
154 -> 125[label=""]
139 -> 140 [label="while" fontname="Courier New"]
140 -> 141 [label="[i < size]" fontname="Courier New"]
140 -> 142 [label="[!(i < size)]" fontname="Courier New"]
142 -> 154 [label="[(i + 10) > size]" fontname="Courier New"]
142 -> 153 [label="[!((i + 10) > size)]" fontname="Courier New"]
100008 [shape="component" label="hex"]
153 -> 100008 [label="len = hex(data + i, &crc);" fontname="Courier New"]
100008 -> 157 [label="" fontname="Courier New"]
158 -> 159 [label="[wide_records == 0]" fontname="Courier New"]
158 -> 160 [label="[!(wide_records == 0)]" fontname="Courier New"]
100009 [shape="component" label="hex"]
162 -> 100009 [label="__CPAchecker_TMP_2 = hex(data + i, &crc);" fontname="Courier New"]
100009 -> 163 [label="" fontname="Courier New"]
159 -> 166 [label="record = malloc(((14 + len) + 3) & (~3));" fontname="Courier New"]
167 -> 168 [label="[Num >= 0]" fontname="Courier New"]
167 -> 169 [label="[!(Num >= 0)]" fontname="Courier New"]
170 -> 172 [label="[record == 0]" fontname="Courier New"]
170 -> 171 [label="[!(record == 0)]" fontname="Courier New"]
176 -> 178 [label="[((i + 8) + ((record->len) * 2)) > size]" fontname="Courier New"]
176 -> 177 [label="[!(((i + 8) + ((record->len) * 2)) > size)]" fontname="Courier New"]
100010 [shape="component" label="hex"]
181 -> 100010 [label="__CPAchecker_TMP_4 = hex(data + i, &crc);" fontname="Courier New"]
100010 -> 182 [label="" fontname="Courier New"]
100011 [shape="component" label="hex"]
185 -> 100011 [label="__CPAchecker_TMP_5 = hex(data + i, &crc);" fontname="Courier New"]
100011 -> 186 [label="" fontname="Courier New"]
100012 [shape="component" label="hex"]
188 -> 100012 [label="type = hex(data + i, &crc);" fontname="Courier New"]
100012 -> 189 [label="" fontname="Courier New"]
192 -> 194 [label="[j < (record->len)]" fontname="Courier New"]
192 -> 195 [label="[!(j < (record->len))]" fontname="Courier New"]
100013 [shape="component" label="hex"]
195 -> 100013 [label="crcbyte = hex(data + i, &crc);" fontname="Courier New"]
100013 -> 200 [label="" fontname="Courier New"]
201 -> 203 [label="[crc != 0]" fontname="Courier New"]
201 -> 202 [label="[!(crc != 0)]" fontname="Courier New"]
206 -> 209 [label="[type == 0]" fontname="Courier New"]
206 -> 210 [label="[!(type == 0)]" fontname="Courier New"]
210 -> 217 [label="[type == 1]" fontname="Courier New"]
210 -> 218 [label="[!(type == 1)]" fontname="Courier New"]
218 -> 225 [label="[type == 2]" fontname="Courier New"]
218 -> 226 [label="[!(type == 2)]" fontname="Courier New"]
226 -> 227 [label="[type == 4]" fontname="Courier New"]
226 -> 228 [label="[!(type == 4)]" fontname="Courier New"]
228 -> 241 [label="[type == 3]" fontname="Courier New"]
228 -> 242 [label="[!(type == 3)]" fontname="Courier New"]
242 -> 243 [label="[type == 5]" fontname="Courier New"]
242 -> 244 [label="[!(type == 5)]" fontname="Courier New"]
243 -> 247 [label="[(record->addr) == 0]" fontname="Courier New"]
243 -> 246 [label="[!((record->addr) == 0)]" fontname="Courier New"]
246 -> 248 [label="fprintf(stderr, \"Bad Start Address record (type %02X) at line %d\n\", type, line);" fontname="Courier New"]
247 -> 246 [label="[(record->len) != 4]" fontname="Courier New"]
247 -> 245 [label="[!((record->len) != 4)]" fontname="Courier New"]
252 -> 253 [label="[include_jump == 0]" fontname="Courier New"]
252 -> 254 [label="[!(include_jump == 0)]" fontname="Courier New"]
100014 [shape="component" label="file_record"]
254 -> 100014 [label="file_record(record);" fontname="Courier New"]
100014 -> 255 [label="" fontname="Courier New"]
253 -> 139 [label="Goto: next_record" fontname="Courier New"]
227 -> 231 [label="[(record->addr) == 0]" fontname="Courier New"]
227 -> 230 [label="[!((record->addr) == 0)]" fontname="Courier New"]
230 -> 232 [label="fprintf(stderr, \"Bad HEX86/HEX386 record (type %02X) at line %d\n\", type, line);" fontname="Courier New"]
231 -> 230 [label="[(record->len) != 2]" fontname="Courier New"]
231 -> 229 [label="[!((record->len) != 2)]" fontname="Courier New"]
235 -> 236 [label="[type == 2]" fontname="Courier New"]
235 -> 237 [label="[!(type == 2)]" fontname="Courier New"]
238 -> 139 [label="offset = offset << __CPAchecker_TMP_7; Goto: next_record" fontname="Courier New"]
225 -> 227 [label="fall through" fontname="Courier New"]
217 -> 221 [label="[(record->addr) == 0]" fontname="Courier New"]
217 -> 220 [label="[!((record->addr) == 0)]" fontname="Courier New"]
220 -> 222 [label="fprintf(stderr, \"Bad EOF record (type 01) format at line %d\", line);" fontname="Courier New"]
221 -> 219 [label="[(record->len) == 0]" fontname="Courier New"]
221 -> 220 [label="[!((record->len) == 0)]" fontname="Courier New"]
207 -> 125 [label="return 0;" fontname="Courier New"]
209 -> 212 [label="[(record->len) == 0]" fontname="Courier New"]
209 -> 211 [label="[!((record->len) == 0)]" fontname="Courier New"]
100015 [shape="component" label="file_record"]
214 -> 100015 [label="file_record(record);" fontname="Courier New"]
100015 -> 215 [label="" fontname="Courier New"]
212 -> 207 [label="break" fontname="Courier New"]
100016 [shape="component" label="hex"]
194 -> 100016 [label="(record->data)[j] = hex(data + i, &crc);" fontname="Courier New"]
100016 -> 196 [label="" fontname="Courier New"]
178 -> 179 [label="fprintf(stderr, \"Not enough data to read complete record at line %d\n\", line);" fontname="Courier New"]
172 -> 173 [label="fprintf(stderr, \"out of memory for records\n\");" fontname="Courier New"]
168 -> 170 [label="(void)0;" fontname="Courier New"]
141 -> 144 [label="[(data[i]) == '\xa']" fontname="Courier New"]
141 -> 143 [label="[!((data[i]) == '\xa')]" fontname="Courier New"]
143 -> 151 [label="int __CPAchecker_TMP_1 = i; i = i + 1;" fontname="Courier New"]
151 -> 149 [label="[(data[__CPAchecker_TMP_1]) == ':']" fontname="Courier New"]
151 -> 148 [label="[!((data[__CPAchecker_TMP_1]) == ':')]" fontname="Courier New"]
149 -> 142 [label="break" fontname="Courier New"]
157 -> 158 [label="i = i + 2;" fontname="Courier New"]
160 -> 162 [label="len = len << 8; uint8_t __CPAchecker_TMP_2;" fontname="Courier New"]
163 -> 159 [label="len = len + __CPAchecker_TMP_2; i = i + 2; " fontname="Courier New"]
166 -> 167 [label="Num = Num - 1;" fontname="Courier New"]
169 -> 170 [label="__assert_fail(\"Num >= 0\", \"tf/ihex2fw.c\", 164, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
177 -> 181 [label="uint8_t __CPAchecker_TMP_4;" fontname="Courier New"]
182 -> 185 [label="record->addr = __CPAchecker_TMP_4 << 8; i = i + 2; uint8_t __CPAchecker_TMP_5;" fontname="Courier New"]
186 -> 188 [label="record->addr = (record->addr) | __CPAchecker_TMP_5; i = i + 2;" fontname="Courier New"]
189 -> 192 [label="i = i + 2; for j = 0;" fontname="Courier New"]
200 -> 201 [label="i = i + 2;" fontname="Courier New"]
202 -> 206 [label="switch (type)" fontname="Courier New"]
248 -> 125 [label="return -22;" fontname="Courier New"]
255 -> 253 [label="" fontname="Courier New"]
241 -> 243 [label="fall through" fontname="Courier New"]
232 -> 125 [label="return -22;" fontname="Courier New"]
229 -> 235 [label="offset = (((record->data)[0]) << 8) | ((record->data)[1]); int __CPAchecker_TMP_7;" fontname="Courier New"]
237 -> 238 [label="__CPAchecker_TMP_7 = 16;" fontname="Courier New"]
236 -> 238 [label="__CPAchecker_TMP_7 = 4;" fontname="Courier New"]
222 -> 125 [label="return -22;" fontname="Courier New"]
219 -> 207 [label="break" fontname="Courier New"]
211 -> 214 [label="record->addr = (record->addr) + offset;" fontname="Courier New"]
215 -> 139 [label="Goto: next_record" fontname="Courier New"]
196 -> 192 [label=" int __CPAchecker_TMP_6 = j; j = j + 1; __CPAchecker_TMP_6; i = i + 2;" fontname="Courier New"]
179 -> 125 [label="return -22;" fontname="Courier New"]
173 -> 125 [label="return -12;" fontname="Courier New"]
148 -> 140 [label="" fontname="Courier New"]
144 -> 143 [label="int __CPAchecker_TMP_0 = line; line = line + 1; __CPAchecker_TMP_0; " fontname="Courier New"]
}