digraph optimize_result {
500 [shape="circle" label="500\n11"]
505 [shape="doublecircle" label="505\n10"]
507 [shape="diamond" label="507\n9"]
508 [shape="circle" label="508\n1"]
499 [shape="circle" label="499\n0"]
510 [shape="circle" label="510\n8"]
509 [shape="circle" label="509\n3"]
511 [shape="diamond" label="511\n7"]
513 [shape="circle" label="513\n2"]
512 [shape="circle" label="512\n6"]
517 [shape="circle" label="517\n5"]
518 [shape="circle" label="518\n4"]
500 -> 505 [label="Function start dummy edge int i; int best; for i = 255;" fontname="Courier New"]
505 -> 507 [label="[i >= 0]" fontname="Courier New"]
505 -> 508 [label="[!(i >= 0)]" fontname="Courier New"]
508 -> 499 [label="default return" fontname="Courier New"]
507 -> 510 [label="[(best_table_len[i]) == 0]" fontname="Courier New"]
507 -> 509 [label="[!((best_table_len[i]) == 0)]" fontname="Courier New"]
509 -> 505 [label=" i = i - 1;" fontname="Courier New"]
100020 [shape="component" label="find_best_token"]
510 -> 100020 [label="best = find_best_token();" fontname="Courier New"]
100020 -> 511 [label="" fontname="Courier New"]
510 -> 511 [label="best = find_best_token();" fontname="Courier New"]
511 -> 513 [label="[(token_profit[best]) == 0]" fontname="Courier New"]
511 -> 512 [label="[!((token_profit[best]) == 0)]" fontname="Courier New"]
100021 [shape="component" label="compress_symbols"]
517 -> 100021 [label="compress_symbols(best_table[i], i);" fontname="Courier New"]
100021 -> 518 [label="" fontname="Courier New"]
517 -> 518 [label="compress_symbols(best_table[i], i);" fontname="Courier New"]
518 -> 509 [label="" fontname="Courier New"]
512 -> 517 [label="best_table_len[i] = 2; best_table[i][0] = best & 255; best_table[i][1] = (best >> 8) & 255;" fontname="Courier New"]
513 -> 508 [label="break" fontname="Courier New"]
}