digraph check_symbol_range {
19 [shape="circle" label="19\n12"]
24 [shape="doublecircle" label="24\n11"]
26 [shape="circle" label="26\n9"]
27 [shape="circle" label="27\n10"]
32 [shape="circle" label="32\n8"]
33 [shape="diamond" label="33\n7"]
30 [shape="circle" label="30\n1"]
31 [shape="circle" label="31\n6"]
39 [shape="diamond" label="39\n4"]
37 [shape="circle" label="37\n2"]
36 [shape="circle" label="36\n3"]
18 [shape="circle" label="18\n0"]
31 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">31</td><td align="left">int __CPAchecker_TMP_1;</td></tr><tr><td align="right">38</td><td align="left">__CPAchecker_TMP_1 = strcmp(sym, ar-&gt;end_sym);</td></tr></table>>]
31 -> 39[label=""]
19 -> 24 [label="Function start dummy edge size_t i; struct addr_range *ar; for i = 0;" fontname="Courier New"]
24 -> 26 [label="[i < entries]" fontname="Courier New"]
24 -> 27 [label="[!(i < entries)]" fontname="Courier New"]
26 -> 32 [label="ar = &(ranges[i]); int __CPAchecker_TMP_0;" fontname="Courier New"]
33 -> 30 [label="[__CPAchecker_TMP_0 == 0]" fontname="Courier New"]
33 -> 31 [label="[!(__CPAchecker_TMP_0 == 0)]" fontname="Courier New"]
39 -> 37 [label="[__CPAchecker_TMP_1 == 0]" fontname="Courier New"]
39 -> 36 [label="[!(__CPAchecker_TMP_1 == 0)]" fontname="Courier New"]
37 -> 18 [label="ar->end = addr; return 0;" fontname="Courier New"]
27 -> 18 [label="return 1;" fontname="Courier New"]
32 -> 33 [label="__CPAchecker_TMP_0 = strcmp(sym, ar->start_sym);" fontname="Courier New"]
36 -> 24 [label=" i = i + 1;" fontname="Courier New"]
30 -> 18 [label="ar->start = addr; return 0;" fontname="Courier New"]
}