digraph process_ihex {
136 [shape="doublecircle" label="136\n88"]
137 [shape="doublecircle" label="137\n87"]
138 [shape="diamond" label="138\n86"]
139 [shape="diamond" label="139\n80"]
151 [shape="circle" label="151\n2"]
150 [shape="circle" label="150\n79"]
154 [shape="circle" label="154\n78"]
155 [shape="diamond" label="155\n77"]
156 [shape="circle" label="156\n73"]
157 [shape="circle" label="157\n76"]
159 [shape="circle" label="159\n75"]
160 [shape="circle" label="160\n74"]
163 [shape="diamond" label="163\n72"]
165 [shape="circle" label="165\n4"]
164 [shape="circle" label="164\n71"]
168 [shape="diamond" label="168\n70"]
169 [shape="circle" label="169\n68"]
170 [shape="circle" label="170\n69"]
171 [shape="circle" label="171\n67"]
172 [shape="circle" label="172\n66"]
173 [shape="diamond" label="173\n65"]
175 [shape="circle" label="175\n6"]
174 [shape="circle" label="174\n64"]
178 [shape="circle" label="178\n63"]
179 [shape="circle" label="179\n62"]
182 [shape="circle" label="182\n61"]
183 [shape="circle" label="183\n60"]
185 [shape="circle" label="185\n59"]
186 [shape="circle" label="186\n58"]
189 [shape="doublecircle" label="189\n57"]
191 [shape="circle" label="191\n8"]
192 [shape="circle" label="192\n56"]
197 [shape="circle" label="197\n55"]
198 [shape="diamond" label="198\n54"]
200 [shape="circle" label="200\n10"]
199 [shape="circle" label="199\n53"]
203 [shape="diamond" label="203\n52"]
206 [shape="diamond" label="206\n16"]
207 [shape="diamond" label="207\n51"]
214 [shape="diamond" label="214\n21"]
215 [shape="diamond" label="215\n50"]
222 [shape="circle" label="222\n31"]
223 [shape="diamond" label="223\n49"]
224 [shape="diamond" label="224\n30"]
225 [shape="diamond" label="225\n48"]
238 [shape="circle" label="238\n43"]
239 [shape="diamond" label="239\n47"]
240 [shape="diamond" label="240\n42"]
241 [shape="circle" label="241\n46"]
244 [shape="diamond" label="244\n41"]
243 [shape="circle" label="243\n33"]
245 [shape="circle" label="245\n32"]
242 [shape="circle" label="242\n40"]
249 [shape="diamond" label="249\n37"]
250 [shape="circle" label="250\n34"]
251 [shape="circle" label="251\n36"]
252 [shape="circle" label="252\n35"]
228 [shape="diamond" label="228\n29"]
227 [shape="circle" label="227\n23"]
229 [shape="circle" label="229\n22"]
226 [shape="circle" label="226\n28"]
232 [shape="diamond" label="232\n27"]
233 [shape="circle" label="233\n25"]
234 [shape="circle" label="234\n26"]
235 [shape="circle" label="235\n24"]
218 [shape="diamond" label="218\n20"]
217 [shape="circle" label="217\n19"]
219 [shape="circle" label="219\n18"]
216 [shape="circle" label="216\n17"]
204 [shape="circle" label="204\n11"]
122 [shape="circle" label="122\n0"]
209 [shape="circle" label="209\n12"]
208 [shape="circle" label="208\n15"]
211 [shape="circle" label="211\n14"]
212 [shape="circle" label="212\n13"]
193 [shape="circle" label="193\n7"]
176 [shape="circle" label="176\n5"]
152 [shape="circle" label="152\n1"]
141 [shape="circle" label="141\n85"]
140 [shape="circle" label="140\n84"]
148 [shape="diamond" label="148\n83"]
146 [shape="circle" label="146\n81"]
145 [shape="circle" label="145\n82"]
123 [shape="circle" label="123\n89"]
241 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">241</td><td align="left">default</td></tr><tr><td align="right">254</td><td align="left">fprintf(stderr, \"Unknown record (type %02X)\n\", type);</td></tr><tr><td align="right">255</td><td align="left">return -22;</td></tr></table>>]
241 -> 122[label=""]
242 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">242</td><td align="left">memcpy(&amp;data32, &amp;((record-&gt;data)[0]), 4);</td></tr><tr><td align="right">247</td><td align="left">data32 = htonl(data32);</td></tr><tr><td align="right">248</td><td align="left">memcpy(&amp;((record-&gt;data)[0]), &amp;data32, 4);</td></tr></table>>]
242 -> 249[label=""]
200 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">200</td><td align="left">fprintf(stderr, \"CRC failure at line %d: got 0x%X, expected 0x%X\n\", line, crcbyte, (unsigned char)(crcbyte - crc));</td></tr><tr><td align="right">201</td><td align="left">return -22;</td></tr></table>>]
200 -> 122[label=""]
165 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">165</td><td align="left">fprintf(stderr, \"out of memory for records\n\");</td></tr><tr><td align="right">166</td><td align="left">return -12;</td></tr></table>>]
165 -> 122[label=""]
136 -> 137 [label="while" fontname="Courier New"]
137 -> 138 [label="[i < size]" fontname="Courier New"]
137 -> 139 [label="[!(i < size)]" fontname="Courier New"]
139 -> 151 [label="[(i + 10) > size]" fontname="Courier New"]
139 -> 150 [label="[!((i + 10) > size)]" fontname="Courier New"]
100008 [shape="component" label="hex"]
150 -> 100008 [label="len = hex(data + i, &crc);" fontname="Courier New"]
100008 -> 154 [label="" fontname="Courier New"]
155 -> 156 [label="[wide_records == 0]" fontname="Courier New"]
155 -> 157 [label="[!(wide_records == 0)]" fontname="Courier New"]
100009 [shape="component" label="hex"]
159 -> 100009 [label="__CPAchecker_TMP_2 = hex(data + i, &crc);" fontname="Courier New"]
100009 -> 160 [label="" fontname="Courier New"]
156 -> 163 [label="record = malloc(((14 + len) + 3) & (~3));" fontname="Courier New"]
163 -> 165 [label="[record == 0]" fontname="Courier New"]
163 -> 164 [label="[!(record == 0)]" fontname="Courier New"]
168 -> 169 [label="[Num >= 0]" fontname="Courier New"]
168 -> 170 [label="[!(Num >= 0)]" fontname="Courier New"]
171 -> 172 [label="memset(record, 0, ((14 + len) + 3) & (~3));" fontname="Courier New"]
173 -> 175 [label="[((i + 8) + ((record->len) * 2)) > size]" fontname="Courier New"]
173 -> 174 [label="[!(((i + 8) + ((record->len) * 2)) > size)]" fontname="Courier New"]
100010 [shape="component" label="hex"]
178 -> 100010 [label="__CPAchecker_TMP_4 = hex(data + i, &crc);" fontname="Courier New"]
100010 -> 179 [label="" fontname="Courier New"]
100011 [shape="component" label="hex"]
182 -> 100011 [label="__CPAchecker_TMP_5 = hex(data + i, &crc);" fontname="Courier New"]
100011 -> 183 [label="" fontname="Courier New"]
100012 [shape="component" label="hex"]
185 -> 100012 [label="type = hex(data + i, &crc);" fontname="Courier New"]
100012 -> 186 [label="" fontname="Courier New"]
189 -> 191 [label="[j < (record->len)]" fontname="Courier New"]
189 -> 192 [label="[!(j < (record->len))]" fontname="Courier New"]
100013 [shape="component" label="hex"]
192 -> 100013 [label="crcbyte = hex(data + i, &crc);" fontname="Courier New"]
100013 -> 197 [label="" fontname="Courier New"]
198 -> 200 [label="[crc != 0]" fontname="Courier New"]
198 -> 199 [label="[!(crc != 0)]" fontname="Courier New"]
203 -> 206 [label="[type == 0]" fontname="Courier New"]
203 -> 207 [label="[!(type == 0)]" fontname="Courier New"]
207 -> 214 [label="[type == 1]" fontname="Courier New"]
207 -> 215 [label="[!(type == 1)]" fontname="Courier New"]
215 -> 222 [label="[type == 2]" fontname="Courier New"]
215 -> 223 [label="[!(type == 2)]" fontname="Courier New"]
223 -> 224 [label="[type == 4]" fontname="Courier New"]
223 -> 225 [label="[!(type == 4)]" fontname="Courier New"]
225 -> 238 [label="[type == 3]" fontname="Courier New"]
225 -> 239 [label="[!(type == 3)]" fontname="Courier New"]
239 -> 240 [label="[type == 5]" fontname="Courier New"]
239 -> 241 [label="[!(type == 5)]" fontname="Courier New"]
240 -> 244 [label="[(record->addr) == 0]" fontname="Courier New"]
240 -> 243 [label="[!((record->addr) == 0)]" fontname="Courier New"]
243 -> 245 [label="fprintf(stderr, \"Bad Start Address record (type %02X) at line %d\n\", type, line);" fontname="Courier New"]
244 -> 243 [label="[(record->len) != 4]" fontname="Courier New"]
244 -> 242 [label="[!((record->len) != 4)]" fontname="Courier New"]
249 -> 250 [label="[include_jump == 0]" fontname="Courier New"]
249 -> 251 [label="[!(include_jump == 0)]" fontname="Courier New"]
100014 [shape="component" label="file_record"]
251 -> 100014 [label="file_record(record);" fontname="Courier New"]
100014 -> 252 [label="" fontname="Courier New"]
250 -> 136 [label="Goto: next_record" fontname="Courier New"]
224 -> 228 [label="[(record->addr) == 0]" fontname="Courier New"]
224 -> 227 [label="[!((record->addr) == 0)]" fontname="Courier New"]
227 -> 229 [label="fprintf(stderr, \"Bad HEX86/HEX386 record (type %02X) at line %d\n\", type, line);" fontname="Courier New"]
228 -> 227 [label="[(record->len) != 2]" fontname="Courier New"]
228 -> 226 [label="[!((record->len) != 2)]" fontname="Courier New"]
232 -> 233 [label="[type == 2]" fontname="Courier New"]
232 -> 234 [label="[!(type == 2)]" fontname="Courier New"]
235 -> 136 [label="offset = offset << __CPAchecker_TMP_7; Goto: next_record" fontname="Courier New"]
222 -> 224 [label="fall through" fontname="Courier New"]
214 -> 218 [label="[(record->addr) == 0]" fontname="Courier New"]
214 -> 217 [label="[!((record->addr) == 0)]" fontname="Courier New"]
217 -> 219 [label="fprintf(stderr, \"Bad EOF record (type 01) format at line %d\", line);" fontname="Courier New"]
218 -> 216 [label="[(record->len) == 0]" fontname="Courier New"]
218 -> 217 [label="[!((record->len) == 0)]" fontname="Courier New"]
204 -> 122 [label="return 0;" fontname="Courier New"]
206 -> 209 [label="[(record->len) == 0]" fontname="Courier New"]
206 -> 208 [label="[!((record->len) == 0)]" fontname="Courier New"]
100015 [shape="component" label="file_record"]
211 -> 100015 [label="file_record(record);" fontname="Courier New"]
100015 -> 212 [label="" fontname="Courier New"]
209 -> 204 [label="break" fontname="Courier New"]
100016 [shape="component" label="hex"]
191 -> 100016 [label="(record->data)[j] = hex(data + i, &crc);" fontname="Courier New"]
100016 -> 193 [label="" fontname="Courier New"]
175 -> 176 [label="fprintf(stderr, \"Not enough data to read complete record at line %d\n\", line);" fontname="Courier New"]
169 -> 171 [label="0;" fontname="Courier New"]
151 -> 152 [label="fprintf(stderr, \"Can't find valid record at line %d\n\", line);" fontname="Courier New"]
138 -> 141 [label="[(data[i]) == '\xa']" fontname="Courier New"]
138 -> 140 [label="[!((data[i]) == '\xa')]" fontname="Courier New"]
140 -> 148 [label="int __CPAchecker_TMP_1 = i; i = i + 1;" fontname="Courier New"]
148 -> 146 [label="[(data[__CPAchecker_TMP_1]) == ':']" fontname="Courier New"]
148 -> 145 [label="[!((data[__CPAchecker_TMP_1]) == ':')]" fontname="Courier New"]
146 -> 139 [label="break" fontname="Courier New"]
123 -> 136 [label="Function start dummy edge struct ihex_binrec *record; uint32_t offset = 0; uint32_t data32; uint8_t type; uint8_t crc = 0; uint8_t crcbyte = 0; int i; int j; int line = 1; int len; i = 0; Label: next_record" fontname="Courier New"]
154 -> 155 [label="i = i + 2;" fontname="Courier New"]
157 -> 159 [label="len = len << 8; uint8_t __CPAchecker_TMP_2;" fontname="Courier New"]
160 -> 156 [label="len = len + __CPAchecker_TMP_2; i = i + 2; " fontname="Courier New"]
164 -> 168 [label="Num = Num - 1;" fontname="Courier New"]
170 -> 171 [label="__assert_fail(\"Num >= 0\", \"tf/ihex2fw.c\", 169, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
172 -> 173 [label="record->len = len;" fontname="Courier New"]
174 -> 178 [label="uint8_t __CPAchecker_TMP_4;" fontname="Courier New"]
179 -> 182 [label="record->addr = __CPAchecker_TMP_4 << 8; i = i + 2; uint8_t __CPAchecker_TMP_5;" fontname="Courier New"]
183 -> 185 [label="record->addr = (record->addr) | __CPAchecker_TMP_5; i = i + 2;" fontname="Courier New"]
186 -> 189 [label="i = i + 2; for j = 0;" fontname="Courier New"]
197 -> 198 [label="i = i + 2;" fontname="Courier New"]
199 -> 203 [label="switch (type)" fontname="Courier New"]
245 -> 122 [label="return -22;" fontname="Courier New"]
252 -> 250 [label="" fontname="Courier New"]
238 -> 240 [label="fall through" fontname="Courier New"]
229 -> 122 [label="return -22;" fontname="Courier New"]
226 -> 232 [label="offset = (((record->data)[0]) << 8) | ((record->data)[1]); int __CPAchecker_TMP_7;" fontname="Courier New"]
234 -> 235 [label="__CPAchecker_TMP_7 = 16;" fontname="Courier New"]
233 -> 235 [label="__CPAchecker_TMP_7 = 4;" fontname="Courier New"]
219 -> 122 [label="return -22;" fontname="Courier New"]
216 -> 204 [label="break" fontname="Courier New"]
208 -> 211 [label="record->addr = (record->addr) + offset;" fontname="Courier New"]
212 -> 136 [label="Goto: next_record" fontname="Courier New"]
193 -> 189 [label=" int __CPAchecker_TMP_6 = j; j = j + 1; __CPAchecker_TMP_6; i = i + 2;" fontname="Courier New"]
176 -> 122 [label="return -22;" fontname="Courier New"]
152 -> 122 [label="return -22;" fontname="Courier New"]
145 -> 137 [label="" fontname="Courier New"]
141 -> 140 [label="int __CPAchecker_TMP_0 = line; line = line + 1; __CPAchecker_TMP_0; " fontname="Courier New"]
}