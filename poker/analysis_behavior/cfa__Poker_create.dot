digraph Poker_create {
1 [shape="circle" label="1\n15"]
3 [shape="circle" label="3\n14"]
4 [shape="diamond" label="4\n13"]
5 [shape="circle" label="5\n11"]
6 [shape="circle" label="6\n12"]
7 [shape="circle" label="7\n10"]
8 [shape="diamond" label="8\n9"]
9 [shape="circle" label="9\n7"]
10 [shape="circle" label="10\n8"]
11 [shape="circle" label="11\n6"]
12 [shape="circle" label="12\n5"]
13 [shape="diamond" label="13\n4"]
14 [shape="circle" label="14\n2"]
15 [shape="circle" label="15\n3"]
16 [shape="circle" label="16\n1"]
0 [shape="circle" label="0\n0"]
1 -> 3 [label="Function start dummy edge struct Poker *pn;" fontname="Courier New"]
4 -> 5 [label="[pn != ((void *)0)]" fontname="Courier New"]
4 -> 6 [label="[!(pn != ((void *)0))]" fontname="Courier New"]
7 -> 8 [label="Num = Num - 1;" fontname="Courier New"]
8 -> 9 [label="[Num >= 0]" fontname="Courier New"]
8 -> 10 [label="[!(Num >= 0)]" fontname="Courier New"]
11 -> 12 [label="pn->name = strdup(name);" fontname="Courier New"]
13 -> 14 [label="[Num >= 0]" fontname="Courier New"]
13 -> 15 [label="[!(Num >= 0)]" fontname="Courier New"]
16 -> 0 [label="pn->num = num; return pn;" fontname="Courier New"]
9 -> 11 [label="0;" fontname="Courier New"]
3 -> 4 [label="pn = malloc(8);" fontname="Courier New"]
6 -> 7 [label="__assert_fail(\"pn != ((void *)0)\", \"tf/poker.c\", 21, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
10 -> 11 [label="__assert_fail(\"Num >= 0\", \"tf/poker.c\", 25, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
12 -> 13 [label="Num = Num - 1;" fontname="Courier New"]
15 -> 16 [label="__assert_fail(\"Num >= 0\", \"tf/poker.c\", 30, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
14 -> 16 [label="0;" fontname="Courier New"]
5 -> 7 [label="0;" fontname="Courier New"]
}