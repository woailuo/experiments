digraph ARG {
node [style="filled" shape="box" color="white"]
subgraph cluster_0 {
label="Refinement 0"
2 [label="2 @ N22\nmain" id="2"]
3 [label="3 @ N12\ndatabase1_rw entry" id="3"]
5 [fillcolor="cornflowerblue" label="5 @ N14\ndatabase1_rw\nABS1: true" id="5"]
6 [label="6 @ N1\nM entry" id="6"]
10 [fillcolor="red" label="10 @ N6\nM\nAssertionAutomaton: _predefinedState_ERROR\nABS2: true" id="10"]
8 [fillcolor="orange" label="8 @ N4\nM" id="8"]
2 -> 3 [label="Line 885: database1_rw()" id="2 -> 3"]
3 -> 5 [label="Line 875: Function start dummy edge Label: l1" id="3 -> 5"]
5 -> 6 [label="Line 876: M()" id="5 -> 6"]
6 -> 8 []
6 -> 10 []
}
1 -> 2
subgraph cluster_1 {
label="Refinement 1"
14 [fillcolor="cornflowerblue" label="14 @ N14\ndatabase1_rw\nABS3" id="14"]
15 [label="15 @ N1\nM entry" id="15"]
19 [fillcolor="red" label="19 @ N6\nM\nAssertionAutomaton: _predefinedState_ERROR\nABS4: true" id="19"]
17 [fillcolor="orange" label="17 @ N4\nM" id="17"]
14 -> 15 [label="Line 876: M()" id="14 -> 15"]
15 -> 17 []
15 -> 19 []
}
12 -> 14
1 [fillcolor="cornflowerblue" label="1 @ N21\nmain entry\nABS0: true" id="1"]
12 [label="12 @ N12\ndatabase1_rw entry" id="12"]
21 [fillcolor="cornflowerblue" label="21 @ N14\ndatabase1_rw\nABS5" id="21"]
22 [label="22 @ N1\nM entry" id="22"]
27 [label="27 @ N0\nM exit" id="27"]
29 [label="29 @ N8\nF entry" id="29"]
30 [label="30 @ N7\nF exit" id="30"]
32 [label="32 @ N1\nM entry" id="32"]
37 [label="37 @ N0\nM exit" id="37"]
39 [label="39 @ N8\nF entry" id="39"]
40 [label="40 @ N7\nF exit" id="40"]
43 [fillcolor="green" label="43 @ N14\ndatabase1_rw\nABS6" id="43"]
1 -> 12 []
12 -> 21 [label="Line 875: Function start dummy edge Label: l1" id="12 -> 21"]
43 -> 21 [style="dashed" weight="0" label="covered by"]
21 -> 22 [label="Line 876: M()" id="21 -> 22"]
22 -> 27 []
27 -> 29 []
29 -> 30 [label="Line 870: Function start dummy edge Num = Num + 1; default return" id="29 -> 30"]
30 -> 32 []
32 -> 37 []
37 -> 39 []
39 -> 40 [label="Line 870: Function start dummy edge Num = Num + 1; default return" id="39 -> 40"]
40 -> 43 []
}
