digraph ListDelete {
117 [shape="circle" label="N117\n11"]
118 [shape="circle" label="N118\n10"]
124 [shape="doublecircle" label="N124\n9"]
126 [shape="diamond" label="N126\n6"]
127 [shape="diamond" label="N127\n8"]
125 [shape="circle" label="N125\n7"]
131 [shape="circle" label="N131\n1"]
132 [shape="diamond" label="N132\n5"]
130 [shape="circle" label="N130\n4"]
116 [shape="circle" label="N116\n0"]
130 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">130</td><td align="left">q = p-&gt;next; p-&gt;next = q-&gt;next; *e = q-&gt;data;</td></tr><tr><td align="right">136</td><td align="left">free(q);</td></tr><tr><td align="right">137</td><td align="left">Num = Num + 1; return 1;</td></tr></table>>]
130 -> 116[label=""]
117 -> 118 [label="Function start dummy edge" fontname="Courier New"]
124 -> 126 [label="[(p->next) == 0]" fontname="Courier New"]
124 -> 127 [label="[!((p->next) == 0)]" fontname="Courier New"]
127 -> 125 [label="[j < i]" fontname="Courier New"]
127 -> 126 [label="[!(j < i)]" fontname="Courier New"]
126 -> 131 [label="[(p->next) == 0]" fontname="Courier New"]
126 -> 132 [label="[!((p->next) == 0)]" fontname="Courier New"]
132 -> 131 [label="[j > i]" fontname="Courier New"]
132 -> 130 [label="[!(j > i)]" fontname="Courier New"]
131 -> 116 [label="return 0;" fontname="Courier New"]
118 -> 124 [label="int j; struct Node *p; struct Node *q; p = *L; j = 1; while" fontname="Courier New"]
125 -> 124 [label="p = p->next; j = j + 1; " fontname="Courier New"]
}