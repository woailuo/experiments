digraph ListDelete {
102 [shape="circle" label="102\n10"]
109 [shape="doublecircle" label="109\n9"]
111 [shape="diamond" label="111\n6"]
112 [shape="diamond" label="112\n8"]
110 [shape="circle" label="110\n7"]
116 [shape="circle" label="116\n1"]
117 [shape="diamond" label="117\n5"]
115 [shape="circle" label="115\n4"]
101 [shape="circle" label="101\n0"]
115 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">115</td><td align="left">q = p-&gt;next; p-&gt;next = q-&gt;next; *e = q-&gt;data;</td></tr><tr><td align="right">121</td><td align="left">free(q);</td></tr><tr><td align="right">122</td><td align="left">Num = Num + 5; return 1;</td></tr></table>>]
115 -> 101[label=""]
102 -> 109 [label="Function start dummy edge int j; LinkList p; LinkList q; p = *L; j = 1; while" fontname="Courier New"]
109 -> 111 [label="[(p->next) == 0]" fontname="Courier New"]
109 -> 112 [label="[!((p->next) == 0)]" fontname="Courier New"]
112 -> 110 [label="[j < i]" fontname="Courier New"]
112 -> 111 [label="[!(j < i)]" fontname="Courier New"]
111 -> 116 [label="[(p->next) == 0]" fontname="Courier New"]
111 -> 117 [label="[!((p->next) == 0)]" fontname="Courier New"]
117 -> 116 [label="[j > i]" fontname="Courier New"]
117 -> 115 [label="[!(j > i)]" fontname="Courier New"]
116 -> 101 [label="return 0;" fontname="Courier New"]
110 -> 109 [label="p = p->next; j = j + 1; " fontname="Courier New"]
}