digraph directive_compare {
1 [shape="circle" label="1\n13"]
8 [shape="circle" label="8\n12"]
10 [shape="diamond" label="10\n10"]
11 [shape="circle" label="11\n8"]
12 [shape="circle" label="12\n9"]
13 [shape="circle" label="13\n7"]
14 [shape="circle" label="14\n6"]
15 [shape="diamond" label="15\n5"]
17 [shape="circle" label="17\n1"]
16 [shape="diamond" label="16\n4"]
20 [shape="circle" label="20\n2"]
19 [shape="circle" label="19\n3"]
0 [shape="circle" label="0\n0"]
8 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">8</td><td align="left">dlen = strlen(dir);</td></tr><tr><td align="right">9</td><td align="left">size_t __CPAchecker_TMP_0;</td></tr></table>>]
8 -> 10[label=""]
1 -> 8 [label="Function start dummy edge const struct token *token = _key; const const char **pdir = _pdir; const char *dir = *pdir; size_t dlen; size_t clen; int val;" fontname="Courier New"]
10 -> 11 [label="[dlen < (token->size)]" fontname="Courier New"]
10 -> 12 [label="[!(dlen < (token->size))]" fontname="Courier New"]
13 -> 14 [label="clen = __CPAchecker_TMP_0;" fontname="Courier New"]
15 -> 17 [label="[val != 0]" fontname="Courier New"]
15 -> 16 [label="[!(val != 0)]" fontname="Courier New"]
16 -> 20 [label="[dlen == (token->size)]" fontname="Courier New"]
16 -> 19 [label="[!(dlen == (token->size))]" fontname="Courier New"]
20 -> 0 [label="return 0;" fontname="Courier New"]
11 -> 13 [label="__CPAchecker_TMP_0 = dlen;" fontname="Courier New"]
12 -> 13 [label="__CPAchecker_TMP_0 = token->size;" fontname="Courier New"]
14 -> 15 [label="val = memcmp(token->value, dir, clen);" fontname="Courier New"]
19 -> 0 [label="return dlen - (token->size);" fontname="Courier New"]
17 -> 0 [label="return val;" fontname="Courier New"]
}