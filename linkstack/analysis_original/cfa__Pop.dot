digraph Pop {
73 [shape="circle" label="N73\n8"]
74 [shape="circle" label="N74\n7"]
78 [shape="circle" label="N78\n6"]
79 [shape="diamond" label="N79\n5"]
76 [shape="circle" label="N76\n3"]
77 [shape="circle" label="N77\n4"]
83 [shape="circle" label="N83\n2"]
72 [shape="circle" label="N72\n0"]
83 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">83</td><td align="left">free(p);</td></tr><tr><td align="right">84</td><td align="left">Num = Num + 1; int __CPAchecker_TMP_1 = S-&gt;count; S-&gt;count = (S-&gt;count) - 1; __CPAchecker_TMP_1; return 1;</td></tr></table>>]
83 -> 72[label=""]
73 -> 74 [label="Function start dummy edge" fontname="Courier New"]
100001 [shape="component" label="StackEmpty"]
78 -> 100001 [label="__CPAchecker_TMP_0 = StackEmpty(*S);" fontname="Courier New"]
100001 -> 79 [label="" fontname="Courier New"]
79 -> 76 [label="[__CPAchecker_TMP_0 == 0]" fontname="Courier New"]
79 -> 77 [label="[!(__CPAchecker_TMP_0 == 0)]" fontname="Courier New"]
76 -> 83 [label="*e = S->top->data; p = S->top; S->top = S->top->next;" fontname="Courier New"]
74 -> 78 [label="struct StackNode *p; Status __CPAchecker_TMP_0;" fontname="Courier New"]
77 -> 72 [label="return 0;" fontname="Courier New"]
}