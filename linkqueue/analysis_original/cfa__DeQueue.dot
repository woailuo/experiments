digraph DeQueue {
99 [shape="diamond" label="N99\n7"]
101 [shape="circle" label="N101\n1"]
100 [shape="circle" label="N100\n6"]
105 [shape="diamond" label="N105\n5"]
107 [shape="circle" label="N107\n4"]
106 [shape="circle" label="N106\n3"]
109 [shape="circle" label="N109\n2"]
96 [shape="circle" label="N96\n0"]
97 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">97</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">98</td><td align="left">struct QNode *p;</td></tr></table>>]
97 -> 99[label=""]
99 -> 101 [label="[(Q->front) == (Q->rear)]" fontname="Courier New"]
99 -> 100 [label="[!((Q->front) == (Q->rear))]" fontname="Courier New"]
105 -> 107 [label="[(Q->rear) == p]" fontname="Courier New"]
105 -> 106 [label="[!((Q->rear) == p)]" fontname="Courier New"]
106 -> 109 [label="free(p);" fontname="Courier New"]
107 -> 106 [label="Q->rear = Q->front; " fontname="Courier New"]
100 -> 105 [label="p = Q->front->next; *e = p->data; Q->front->next = p->next;" fontname="Courier New"]
109 -> 96 [label="Num = Num + 1; return 1;" fontname="Courier New"]
101 -> 96 [label="return 0;" fontname="Courier New"]
}