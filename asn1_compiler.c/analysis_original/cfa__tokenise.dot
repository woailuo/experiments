digraph tokenise {
24 [shape="circle" label="24\n105"]
32 [shape="circle" label="32\n104"]
34 [shape="diamond" label="34\n102"]
36 [shape="circle" label="36\n101"]
35 [shape="circle" label="35\n98"]
41 [shape="doublecircle" label="41\n97"]
42 [shape="circle" label="42\n92"]
43 [shape="circle" label="43\n96"]
47 [shape="circle" label="47\n91"]
48 [shape="diamond" label="48\n90"]
50 [shape="circle" label="50\n88"]
51 [shape="circle" label="51\n89"]
49 [shape="circle" label="49\n87"]
57 [shape="doublecircle" label="57\n86"]
58 [shape="doublecircle" label="58\n85"]
61 [shape="diamond" label="61\n84"]
60 [shape="circle" label="60\n72"]
59 [shape="diamond" label="59\n83"]
63 [shape="circle" label="63\n81"]
64 [shape="circle" label="64\n82"]
66 [shape="doublecircle" label="66\n80"]
69 [shape="diamond" label="69\n79"]
68 [shape="circle" label="68\n73"]
67 [shape="diamond" label="67\n78"]
71 [shape="circle" label="71\n76"]
70 [shape="circle" label="70\n77"]
72 [shape="circle" label="72\n75"]
85 [shape="doublecircle" label="85\n71"]
86 [shape="circle" label="86\n70"]
87 [shape="circle" label="87\n0"]
88 [shape="doublecircle" label="88\n69"]
91 [shape="circle" label="91\n68"]
90 [shape="diamond" label="90\n64"]
98 [shape="circle" label="98\n1"]
97 [shape="circle" label="97\n63"]
105 [shape="diamond" label="105\n61"]
102 [shape="circle" label="102\n44"]
103 [shape="circle" label="103\n60"]
108 [shape="doublecircle" label="108\n59"]
111 [shape="circle" label="111\n58"]
110 [shape="circle" label="110\n53"]
123 [shape="circle" label="123\n52"]
124 [shape="diamond" label="124\n51"]
121 [shape="circle" label="121\n49"]
122 [shape="circle" label="122\n50"]
129 [shape="diamond" label="129\n48"]
130 [shape="circle" label="130\n46"]
131 [shape="circle" label="131\n47"]
115 [shape="diamond" label="115\n56"]
113 [shape="diamond" label="113\n55"]
109 [shape="circle" label="109\n45"]
112 [shape="diamond" label="112\n54"]
143 [shape="diamond" label="143\n42"]
140 [shape="diamond" label="140\n34"]
141 [shape="circle" label="141\n41"]
145 [shape="doublecircle" label="145\n40"]
148 [shape="circle" label="148\n39"]
147 [shape="circle" label="147\n35"]
150 [shape="diamond" label="150\n37"]
146 [shape="circle" label="146\n36"]
161 [shape="circle" label="161\n33"]
160 [shape="diamond" label="160\n29"]
173 [shape="circle" label="173\n28"]
172 [shape="diamond" label="172\n21"]
195 [shape="circle" label="195\n20"]
194 [shape="circle" label="194\n12"]
237 [shape="circle" label="237\n11"]
197 [shape="diamond" label="197\n19"]
200 [shape="circle" label="200\n5"]
201 [shape="diamond" label="201\n18"]
207 [shape="circle" label="207\n6"]
208 [shape="diamond" label="208\n17"]
214 [shape="circle" label="214\n7"]
215 [shape="diamond" label="215\n16"]
221 [shape="circle" label="221\n8"]
222 [shape="diamond" label="222\n15"]
228 [shape="circle" label="228\n9"]
229 [shape="circle" label="229\n14"]
177 [shape="diamond" label="177\n26"]
175 [shape="circle" label="175\n3"]
174 [shape="circle" label="174\n25"]
187 [shape="diamond" label="187\n23"]
185 [shape="circle" label="185\n4"]
184 [shape="circle" label="184\n22"]
164 [shape="circle" label="164\n32"]
165 [shape="diamond" label="165\n31"]
163 [shape="circle" label="163\n2"]
162 [shape="circle" label="162\n30"]
92 [shape="circle" label="92\n67"]
93 [shape="diamond" label="93\n66"]
89 [shape="circle" label="89\n65"]
32 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">32</td><td align="left">tokens = calloc((end - buffer) / 2, 19);</td></tr><tr><td align="right">33</td><td align="left">token_list = tokens;</td></tr></table>>]
32 -> 34[label=""]
43 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">43</td><td align="left">nr_tokens = tix;</td></tr><tr><td align="right">239</td><td align="left">printf(\"Extracted %u tokens\n\", nr_tokens);</td></tr><tr><td align="right">240</td><td align="left">default return</td></tr></table>>]
43 -> 23[label=""]
72 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">72</td><td align="left">memmove(p, q, nl - q);</td></tr><tr><td align="right">73</td><td align="left">Goto: next_comment</td></tr></table>>]
72 -> 57[label=""]
97 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">97</td><td align="left">(tokens[tix]).line = lineno; (tokens[tix]).value = p; const unsigned short int **__CPAchecker_TMP_5;</td></tr><tr><td align="right">104</td><td align="left">__CPAchecker_TMP_5 = __ctype_b_loc();</td></tr></table>>]
97 -> 105[label=""]
111 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">111</td><td align="left">const unsigned short int **__CPAchecker_TMP_6;</td></tr><tr><td align="right">114</td><td align="left">__CPAchecker_TMP_6 = __ctype_b_loc();</td></tr></table>>]
111 -> 115[label=""]
102 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">102</td><td align="left">const unsigned short int **__CPAchecker_TMP_12;</td></tr><tr><td align="right">142</td><td align="left">__CPAchecker_TMP_12 = __ctype_b_loc();</td></tr></table>>]
102 -> 143[label=""]
148 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">148</td><td align="left">const unsigned short int **__CPAchecker_TMP_13;</td></tr><tr><td align="right">149</td><td align="left">__CPAchecker_TMP_13 = __ctype_b_loc();</td></tr></table>>]
148 -> 150[label=""]
237 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">237</td><td align="left">exit(1);</td></tr><tr><td align="right">238</td><td align="left"></td></tr></table>>]
237 -> 85[label=""]
229 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">229</td><td align="left">default</td></tr><tr><td align="right">235</td><td align="left">break </td></tr></table>>]
229 -> 194[label=""]
173 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">173</td><td align="left">int __CPAchecker_TMP_18;</td></tr><tr><td align="right">176</td><td align="left">__CPAchecker_TMP_18 = memcmp(p, \"(&#123;\", 2);</td></tr></table>>]
173 -> 177[label=""]
174 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">174</td><td align="left">int __CPAchecker_TMP_20;</td></tr><tr><td align="right">186</td><td align="left">__CPAchecker_TMP_20 = memcmp(p, \"&#125;)\", 2);</td></tr></table>>]
174 -> 187[label=""]
36 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">36</td><td align="left">perror((void *)0);</td></tr><tr><td align="right">37</td><td align="left">exit(1);</td></tr><tr><td align="right">38</td><td align="left"></td></tr></table>>]
36 -> 35[label=""]
24 -> 32 [label="Function start dummy edge struct token *tokens; char *line; char *nl; char *p; char *q; unsigned tix; unsigned lineno;" fontname="Courier New"]
34 -> 36 [label="[tokens == 0]" fontname="Courier New"]
34 -> 35 [label="[!(tokens == 0)]" fontname="Courier New"]
35 -> 41 [label="tix = 0; lineno = 0; while" fontname="Courier New"]
41 -> 42 [label="[buffer < end]" fontname="Courier New"]
41 -> 43 [label="[!(buffer < end)]" fontname="Courier New"]
42 -> 47 [label="unsigned __CPAchecker_TMP_0 = lineno; lineno = lineno + 1; __CPAchecker_TMP_0; line = buffer;" fontname="Courier New"]
48 -> 50 [label="[nl == 0]" fontname="Courier New"]
48 -> 51 [label="[!(nl == 0)]" fontname="Courier New"]
49 -> 57 [label="p = line; Label: next_comment" fontname="Courier New"]
57 -> 58 [label="while" fontname="Courier New"]
58 -> 61 [label="p = memchr(p, '-', nl - p);" fontname="Courier New"]
61 -> 60 [label="[p == 0]" fontname="Courier New"]
61 -> 59 [label="[!(p == 0)]" fontname="Courier New"]
59 -> 63 [label="[(p[1]) == '-']" fontname="Courier New"]
59 -> 64 [label="[!((p[1]) == '-')]" fontname="Courier New"]
63 -> 66 [label="q = p + 2; while" fontname="Courier New"]
66 -> 69 [label="q = memchr(q, '-', nl - q);" fontname="Courier New"]
69 -> 68 [label="[q == 0]" fontname="Courier New"]
69 -> 67 [label="[!(q == 0)]" fontname="Courier New"]
67 -> 71 [label="[(q[1]) == '-']" fontname="Courier New"]
67 -> 70 [label="[!((q[1]) == '-')]" fontname="Courier New"]
71 -> 72 [label="q = q + 2;" fontname="Courier New"]
68 -> 60 [label="*p = '\x0'; nl = p; break" fontname="Courier New"]
60 -> 85 [label="p = line; while" fontname="Courier New"]
85 -> 86 [label="[p < nl]" fontname="Courier New"]
85 -> 87 [label="[!(p < nl)]" fontname="Courier New"]
87 -> 41 [label="" fontname="Courier New"]
88 -> 91 [label="[p < nl]" fontname="Courier New"]
88 -> 90 [label="[!(p < nl)]" fontname="Courier New"]
90 -> 98 [label="[p >= nl]" fontname="Courier New"]
90 -> 97 [label="[!(p >= nl)]" fontname="Courier New"]
105 -> 102 [label="[(((*__CPAchecker_TMP_5)[(int)(*p)]) & 1024U) == 0]" fontname="Courier New"]
105 -> 103 [label="[!((((*__CPAchecker_TMP_5)[(int)(*p)]) & 1024U) == 0)]" fontname="Courier New"]
108 -> 111 [label="[q < nl]" fontname="Courier New"]
108 -> 110 [label="[!(q < nl)]" fontname="Courier New"]
110 -> 123 [label="(tokens[tix]).size = q - p; p = q; const unsigned short int **__CPAchecker_TMP_8;" fontname="Courier New"]
124 -> 121 [label="[(((*__CPAchecker_TMP_8)[(int)(((tokens[tix]).value)[0])]) & 512U) == 0]" fontname="Courier New"]
124 -> 122 [label="[!((((*__CPAchecker_TMP_8)[(int)(((tokens[tix]).value)[0])]) & 512U) == 0)]" fontname="Courier New"]
121 -> 129 [label="dir = bsearch(&(tokens[tix]), directives, 82UL, 4, &directive_compare);" fontname="Courier New"]
129 -> 130 [label="[dir == 0]" fontname="Courier New"]
129 -> 131 [label="[!(dir == 0)]" fontname="Courier New"]
130 -> 85 [label="unsigned __CPAchecker_TMP_11 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_11]).token_type = 91; continue" fontname="Courier New"]
115 -> 113 [label="[(((*__CPAchecker_TMP_6)[(int)(*q)]) & 8U) == 0]" fontname="Courier New"]
115 -> 109 [label="[!((((*__CPAchecker_TMP_6)[(int)(*q)]) & 8U) == 0)]" fontname="Courier New"]
109 -> 108 [label="char *__CPAchecker_TMP_7 = q; q = q + 1; __CPAchecker_TMP_7; " fontname="Courier New"]
113 -> 109 [label="[(*q) == '-']" fontname="Courier New"]
113 -> 112 [label="[!((*q) == '-')]" fontname="Courier New"]
112 -> 109 [label="[(*q) == '_']" fontname="Courier New"]
112 -> 110 [label="[!((*q) == '_')]" fontname="Courier New"]
143 -> 140 [label="[(((*__CPAchecker_TMP_12)[(int)(*p)]) & 2048U) == 0]" fontname="Courier New"]
143 -> 141 [label="[!((((*__CPAchecker_TMP_12)[(int)(*p)]) & 2048U) == 0)]" fontname="Courier New"]
145 -> 148 [label="[q < nl]" fontname="Courier New"]
145 -> 147 [label="[!(q < nl)]" fontname="Courier New"]
147 -> 85 [label="(tokens[tix]).size = q - p; p = q; unsigned __CPAchecker_TMP_15 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_15]).token_type = 90; continue" fontname="Courier New"]
150 -> 147 [label="[(((*__CPAchecker_TMP_13)[(int)(*q)]) & 2048U) == 0]" fontname="Courier New"]
150 -> 146 [label="[!((((*__CPAchecker_TMP_13)[(int)(*q)]) & 2048U) == 0)]" fontname="Courier New"]
140 -> 161 [label="[(nl - p) >= 3]" fontname="Courier New"]
140 -> 160 [label="[!((nl - p) >= 3)]" fontname="Courier New"]
160 -> 173 [label="[(nl - p) >= 2]" fontname="Courier New"]
160 -> 172 [label="[!((nl - p) >= 2)]" fontname="Courier New"]
172 -> 195 [label="[(nl - p) >= 1]" fontname="Courier New"]
172 -> 194 [label="[!((nl - p) >= 1)]" fontname="Courier New"]
194 -> 237 [label="fprintf(stderr, \"%s:%u: Unknown character in grammar: '%c'\n\", filename, lineno, *p);" fontname="Courier New"]
195 -> 197 [label="(tokens[tix]).size = 1; switch (*p)" fontname="Courier New"]
197 -> 200 [label="[(*p) == '{']" fontname="Courier New"]
197 -> 201 [label="[!((*p) == '{')]" fontname="Courier New"]
201 -> 207 [label="[(*p) == '}']" fontname="Courier New"]
201 -> 208 [label="[!((*p) == '}')]" fontname="Courier New"]
208 -> 214 [label="[(*p) == '[']" fontname="Courier New"]
208 -> 215 [label="[!((*p) == '[')]" fontname="Courier New"]
215 -> 221 [label="[(*p) == ']']" fontname="Courier New"]
215 -> 222 [label="[!((*p) == ']')]" fontname="Courier New"]
222 -> 228 [label="[(*p) == ',']" fontname="Courier New"]
222 -> 229 [label="[!((*p) == ',')]" fontname="Courier New"]
228 -> 85 [label="p = p + 1; unsigned __CPAchecker_TMP_26 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_26]).token_type = 89; continue" fontname="Courier New"]
214 -> 85 [label="p = p + 1; unsigned __CPAchecker_TMP_24 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_24]).token_type = 85; continue" fontname="Courier New"]
200 -> 85 [label="p = p + 1; unsigned __CPAchecker_TMP_22 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_22]).token_type = 83; continue" fontname="Courier New"]
177 -> 175 [label="[__CPAchecker_TMP_18 == 0]" fontname="Courier New"]
177 -> 174 [label="[!(__CPAchecker_TMP_18 == 0)]" fontname="Courier New"]
187 -> 185 [label="[__CPAchecker_TMP_20 == 0]" fontname="Courier New"]
187 -> 184 [label="[!(__CPAchecker_TMP_20 == 0)]" fontname="Courier New"]
185 -> 85 [label="p = p + 2; (tokens[tix]).size = 2; unsigned __CPAchecker_TMP_21 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_21]).token_type = 88; continue" fontname="Courier New"]
161 -> 164 [label="int __CPAchecker_TMP_16;" fontname="Courier New"]
165 -> 163 [label="[__CPAchecker_TMP_16 == 0]" fontname="Courier New"]
165 -> 162 [label="[!(__CPAchecker_TMP_16 == 0)]" fontname="Courier New"]
163 -> 85 [label="p = p + 3; (tokens[tix]).size = 3; unsigned __CPAchecker_TMP_17 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_17]).token_type = 82; continue" fontname="Courier New"]
91 -> 92 [label="const unsigned short int **__CPAchecker_TMP_3;" fontname="Courier New"]
93 -> 90 [label="[(((*__CPAchecker_TMP_3)[(int)(*p)]) & 8192U) == 0]" fontname="Courier New"]
93 -> 89 [label="[!((((*__CPAchecker_TMP_3)[(int)(*p)]) & 8192U) == 0)]" fontname="Courier New"]
50 -> 49 [label="nl = end; buffer = nl; " fontname="Courier New"]
47 -> 48 [label="nl = memchr(line, '\xa', end - buffer);" fontname="Courier New"]
51 -> 49 [label="buffer = nl + 1; *nl = '\x0'; " fontname="Courier New"]
64 -> 58 [label="char *__CPAchecker_TMP_2 = p; p = p + 1; __CPAchecker_TMP_2; " fontname="Courier New"]
70 -> 66 [label="char *__CPAchecker_TMP_1 = q; q = q + 1; __CPAchecker_TMP_1; " fontname="Courier New"]
86 -> 88 [label="while" fontname="Courier New"]
103 -> 108 [label="const char **dir; q = p + 1; while" fontname="Courier New"]
123 -> 124 [label="__CPAchecker_TMP_8 = __ctype_b_loc();" fontname="Courier New"]
122 -> 85 [label="unsigned __CPAchecker_TMP_9 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_9]).token_type = 92; continue" fontname="Courier New"]
131 -> 85 [label="unsigned __CPAchecker_TMP_10 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_10]).token_type = dir - directives; continue" fontname="Courier New"]
141 -> 145 [label="q = p + 1; while" fontname="Courier New"]
146 -> 145 [label="char *__CPAchecker_TMP_14 = q; q = q + 1; __CPAchecker_TMP_14; " fontname="Courier New"]
221 -> 85 [label="p = p + 1; unsigned __CPAchecker_TMP_25 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_25]).token_type = 86; continue" fontname="Courier New"]
207 -> 85 [label="p = p + 1; unsigned __CPAchecker_TMP_23 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_23]).token_type = 84; continue" fontname="Courier New"]
184 -> 172 [label="" fontname="Courier New"]
175 -> 85 [label="p = p + 2; (tokens[tix]).size = 2; unsigned __CPAchecker_TMP_19 = tix; tix = tix + 1; (tokens[__CPAchecker_TMP_19]).token_type = 87; continue" fontname="Courier New"]
164 -> 165 [label="__CPAchecker_TMP_16 = memcmp(p, \"::=\", 3);" fontname="Courier New"]
162 -> 160 [label="" fontname="Courier New"]
98 -> 87 [label="break" fontname="Courier New"]
92 -> 93 [label="__CPAchecker_TMP_3 = __ctype_b_loc();" fontname="Courier New"]
89 -> 88 [label="char *__CPAchecker_TMP_4 = p; p = p + 1; *__CPAchecker_TMP_4 = 0; " fontname="Courier New"]
}