(declare-fun Num () Int)
(declare-fun |CreateListHead::i| () Int)
(declare-fun |CreateListHead::n| () Int)

ClearList N32:
(assert (>= Num 0))

ListLength N46:
(assert (>= Num 0))

GetElem N61:
(assert false)

LocateElem N78:
(assert false)

ListInsert N97:
(assert false)

ListDelete N124:
(assert false)

ListTraverse N144:
(assert (>= Num 0))

CreateListHead N166:
(assert (and (>= Num 0) (let ((.cse75 (<= |CreateListHead::n| |CreateListHead::i|))) (let ((.cse74 (<= |CreateListHead::n| (+ |CreateListHead::i| 1))) (.cse40 (not .cse75))) (let ((.cse72 (<= |CreateListHead::n| (+ |CreateListHead::i| 2))) (.cse73 (or .cse74 .cse40)) (.cse39 (not .cse74))) (let ((.cse70 (<= |CreateListHead::n| (+ |CreateListHead::i| 3))) (.cse71 (ite .cse72 .cse73 (and .cse39 .cse40))) (.cse38 (not .cse72))) (let ((.cse68 (<= |CreateListHead::n| (+ |CreateListHead::i| 4))) (.cse69 (ite .cse70 .cse71 (and .cse38 .cse39 .cse40))) (.cse37 (not .cse70))) (let ((.cse66 (<= |CreateListHead::n| (+ |CreateListHead::i| 5))) (.cse67 (ite .cse68 .cse69 (and .cse37 .cse38 .cse39 .cse40))) (.cse36 (not .cse68))) (let ((.cse64 (<= |CreateListHead::n| (+ |CreateListHead::i| 6))) (.cse65 (ite .cse66 .cse67 (and .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse35 (not .cse66))) (let ((.cse62 (<= |CreateListHead::n| (+ |CreateListHead::i| 7))) (.cse63 (ite .cse64 .cse65 (and .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse34 (not .cse64))) (let ((.cse60 (<= |CreateListHead::n| (+ |CreateListHead::i| 8))) (.cse61 (ite .cse62 .cse63 (and .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse33 (not .cse62))) (let ((.cse58 (<= |CreateListHead::n| (+ |CreateListHead::i| 9))) (.cse59 (ite .cse60 .cse61 (and .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse32 (not .cse60))) (let ((.cse56 (<= |CreateListHead::n| (+ |CreateListHead::i| 10))) (.cse57 (ite .cse58 .cse59 (and .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse31 (not .cse58))) (let ((.cse54 (<= |CreateListHead::n| (+ |CreateListHead::i| 11))) (.cse55 (ite .cse56 .cse57 (and .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse30 (not .cse56))) (let ((.cse52 (<= |CreateListHead::n| (+ |CreateListHead::i| 12))) (.cse53 (ite .cse54 .cse55 (and .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse29 (not .cse54))) (let ((.cse50 (<= |CreateListHead::n| (+ |CreateListHead::i| 13))) (.cse51 (ite .cse52 .cse53 (and .cse29 .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse28 (not .cse52))) (let ((.cse48 (<= |CreateListHead::n| (+ |CreateListHead::i| 14))) (.cse49 (ite .cse50 .cse51 (and .cse28 .cse29 .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse27 (not .cse50))) (let ((.cse46 (<= |CreateListHead::n| (+ |CreateListHead::i| 15))) (.cse47 (ite .cse48 .cse49 (and .cse27 .cse28 .cse29 .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse26 (not .cse48))) (let ((.cse44 (<= |CreateListHead::n| (+ |CreateListHead::i| 16))) (.cse45 (ite .cse46 .cse47 (and .cse26 .cse27 .cse28 .cse29 .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse25 (not .cse46))) (let ((.cse42 (<= |CreateListHead::n| (+ |CreateListHead::i| 17))) (.cse43 (ite .cse44 .cse45 (and .cse25 .cse26 .cse27 .cse28 .cse29 .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse24 (not .cse44))) (let ((.cse22 (<= |CreateListHead::n| (+ |CreateListHead::i| 18))) (.cse41 (ite .cse42 .cse43 (and .cse24 .cse25 .cse26 .cse27 .cse28 .cse29 .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse23 (not .cse42))) (let ((.cse0 (<= 0 (+ Num (- 19)))) (.cse21 (ite .cse22 .cse41 (and .cse23 .cse24 .cse25 .cse26 .cse27 .cse28 .cse29 .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (.cse1 (<= 0 (+ Num (- 18)))) (.cse2 (<= 0 (+ Num (- 17)))) (.cse3 (<= 0 (+ Num (- 16)))) (.cse4 (<= 0 (+ Num (- 15)))) (.cse5 (<= 0 (+ Num (- 14)))) (.cse6 (<= 0 (+ Num (- 13)))) (.cse7 (<= 0 (+ Num (- 12)))) (.cse8 (<= 0 (+ Num (- 11)))) (.cse9 (<= 0 (+ Num (- 10)))) (.cse10 (<= 0 (+ Num (- 9)))) (.cse11 (<= 0 (+ Num (- 8)))) (.cse12 (<= 0 (+ Num (- 7)))) (.cse13 (<= 0 (+ Num (- 6)))) (.cse14 (<= 0 (+ Num (- 5)))) (.cse15 (<= 0 (+ Num (- 4)))) (.cse16 (<= 0 (+ Num (- 3)))) (.cse17 (<= 0 (+ Num (- 2)))) (.cse18 (<= 0 (+ Num (- 1)))) (.cse19 (<= |CreateListHead::n| (+ |CreateListHead::i| 20))) (.cse20 (<= |CreateListHead::n| (+ |CreateListHead::i| 19)))) (ite (<= 0 (+ Num (- 20))) (and .cse0 .cse1 .cse2 .cse3 .cse4 .cse5 .cse6 .cse7 .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 (ite .cse20 .cse21 (and (not .cse22) .cse23 .cse24 .cse25 .cse26 .cse27 .cse28 .cse29 .cse30 .cse31 .cse32 .cse33 .cse34 .cse35 .cse36 .cse37 .cse38 .cse39 .cse40))) (ite .cse0 (and .cse1 .cse2 .cse3 .cse4 .cse5 .cse6 .cse7 .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse21) (ite .cse1 (and .cse2 .cse3 .cse4 .cse5 .cse6 .cse7 .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse41) (ite .cse2 (and .cse3 .cse4 .cse5 .cse6 .cse7 .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse43) (ite .cse3 (and .cse4 .cse5 .cse6 .cse7 .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse45) (ite .cse4 (and .cse5 .cse6 .cse7 .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse47) (ite .cse5 (and .cse6 .cse7 .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse49) (ite .cse6 (and .cse7 .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse51) (ite .cse7 (and .cse8 .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse53) (ite .cse8 (and .cse9 .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse55) (ite .cse9 (and .cse10 .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse57) (ite .cse10 (and .cse11 .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse59) (ite .cse11 (and .cse12 .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse61) (ite .cse12 (and .cse13 .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse62 .cse63) (ite .cse13 (and .cse14 .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse62 .cse64 .cse65) (ite .cse14 (and .cse15 .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse62 .cse64 .cse66 .cse67) (ite .cse15 (and .cse16 .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse62 .cse64 .cse66 .cse68 .cse69) (ite .cse16 (and .cse17 .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse62 .cse64 .cse66 .cse68 .cse70 .cse71) (ite .cse17 (and .cse18 .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse62 .cse64 .cse66 .cse68 .cse70 .cse72 .cse73) (ite .cse18 (and .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse62 .cse64 .cse66 .cse68 .cse70 .cse72 .cse74) (and .cse19 .cse20 .cse22 .cse42 .cse44 .cse46 .cse48 .cse50 .cse52 .cse54 .cse56 .cse58 .cse60 .cse62 .cse64 .cse66 .cse68 .cse70 .cse72 .cse74 .cse75)))))))))))))))))))))))))))))))))))))))))))

CreateListTail N196:
(assert false)

