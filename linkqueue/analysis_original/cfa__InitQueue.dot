digraph InitQueue {
10 [shape="diamond" label="N10\n7"]
11 [shape="circle" label="N11\n5"]
12 [shape="circle" label="N12\n6"]
13 [shape="diamond" label="N13\n4"]
15 [shape="circle" label="N15\n3"]
14 [shape="circle" label="N14\n1"]
5 [shape="circle" label="N5\n0"]
6 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">7</td><td align="left">Q-&gt;rear = malloc(8);</td></tr><tr><td align="right">8</td><td align="left">Q-&gt;front = Q-&gt;rear; Num = Num - 1;</td></tr></table>>]
6 -> 10[label=""]
15 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">15</td><td align="left">exit(3);</td></tr><tr><td align="right">16</td><td align="left"></td></tr></table>>]
15 -> 14[label=""]
10 -> 11 [label="[Num >= 0]" fontname="Courier New"]
10 -> 12 [label="[!(Num >= 0)]" fontname="Courier New"]
13 -> 15 [label="[(Q->front) == 0]" fontname="Courier New"]
13 -> 14 [label="[!((Q->front) == 0)]" fontname="Courier New"]
14 -> 5 [label="Q->front->next = (void *)0; return 1;" fontname="Courier New"]
11 -> 13 [label="(void)0;" fontname="Courier New"]
12 -> 13 [label="__assert_fail(\"Num >= 0\", \"tf/linkqueue.c\", 42, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
}