digraph sort_aliases {
1055 [shape="doublecircle" label="N1055\n18"]
1057 [shape="circle" label="N1057\n15"]
1058 [shape="circle" label="N1058\n17"]
1060 [shape="doublecircle" label="N1060\n14"]
1062 [shape="circle" label="N1062\n12"]
1063 [shape="circle" label="N1063\n13"]
1067 [shape="diamond" label="N1067\n11"]
1068 [shape="circle" label="N1068\n8"]
1070 [shape="diamond" label="N1070\n10"]
1069 [shape="circle" label="N1069\n9"]
1075 [shape="circle" label="N1075\n7"]
1076 [shape="diamond" label="N1076\n6"]
1074 [shape="circle" label="N1074\n5"]
1073 [shape="circle" label="N1073\n0"]
1049 [shape="circle" label="N1049\n16"]
1050 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1050</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">1051</td><td align="left">struct aliasinfo *a1; struct aliasinfo *a2; for a1 = aliasinfo;</td></tr></table>>]
1050 -> 1055[label=""]
1074 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1074</td><td align="left">struct aliasinfo t;</td></tr><tr><td align="right">1077</td><td align="left">memcpy(&amp;t, a1, 12);</td></tr><tr><td align="right">1078</td><td align="left">memcpy(a1, a2, 12);</td></tr><tr><td align="right">1079</td><td align="left">memcpy(a2, &amp;t, 12);</td></tr><tr><td align="right">1080</td><td align="left"></td></tr></table>>]
1074 -> 1073[label=""]
1055 -> 1057 [label="[a1 < (aliasinfo + aliases)]" fontname="Courier New"]
1055 -> 1058 [label="[!(a1 < (aliasinfo + aliases))]" fontname="Courier New"]
1057 -> 1060 [label="for a2 = a1 + 1;" fontname="Courier New"]
1060 -> 1062 [label="[a2 < (aliasinfo + aliases)]" fontname="Courier New"]
1060 -> 1063 [label="[!(a2 < (aliasinfo + aliases))]" fontname="Courier New"]
1062 -> 1067 [label="char *n1; char *n2; n1 = a1->name; n2 = a2->name;" fontname="Courier New"]
1067 -> 1068 [label="[show_alias == 0]" fontname="Courier New"]
1067 -> 1070 [label="[!(show_alias == 0)]" fontname="Courier New"]
1070 -> 1069 [label="[show_inverted == 0]" fontname="Courier New"]
1070 -> 1068 [label="[!(show_inverted == 0)]" fontname="Courier New"]
1068 -> 1075 [label="int __CPAchecker_TMP_0;" fontname="Courier New"]
1076 -> 1074 [label="[__CPAchecker_TMP_0 > 0]" fontname="Courier New"]
1076 -> 1073 [label="[!(__CPAchecker_TMP_0 > 0)]" fontname="Courier New"]
1073 -> 1060 [label=" a2 = a2 + 1;" fontname="Courier New"]
1069 -> 1068 [label="n1 = a1->ref; n2 = a2->ref; " fontname="Courier New"]
1058 -> 1049 [label="default return" fontname="Courier New"]
1063 -> 1055 [label=" a1 = a1 + 1;" fontname="Courier New"]
1075 -> 1076 [label="__CPAchecker_TMP_0 = strcasecmp(n1, n2);" fontname="Courier New"]
}